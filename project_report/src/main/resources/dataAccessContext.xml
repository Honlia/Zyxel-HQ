<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 数据源定义 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="defaultAutoCommit" value="false" />
        <property name="maxIdle" value="${dbcp.maxIdle}" />
        <property name="maxActive" value="${dbcp.maxActive}" />
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
        <property name="minEvictableIdleTimeMillis" value="3600000" />
    </bean>  


    <!-- MyBatis SqlSessionFactory 定义-->
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:cn/superfw/application/domain/mappers/**/*.xml"/>
    </bean> -->
  
    <!-- 创建spring的sessionfactory工厂 -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <!-- 注入数据源 -->  
        <property name="dataSource" ref="dataSource"/>  
        <!-- 设置数据库字段命名策略 -->
        <property name="namingStrategy" ref="namingStrategy" />
        <!-- 设置spring去哪个包中查找相应的实体类 -->  
        <property name="packagesToScan">  
            <list>  
                <value>cn.superfw.application.domain</value>  
            </list>  
        </property>  
        <property name="hibernateProperties">  
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop> 
                <prop key="hibernate.use_sql_comments">true</prop> 
                <prop key="hibernate.cache.use_second_level_cache">false</prop> 
                <!-- Fetch Size 是设定JDBC的Statement读取数据的时候每次从数据库中取出的记录条数。 -->     
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <!-- Batch Size是设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小 -->  
                <prop key="hibernate.jdbc.batch_size">25</prop>
                <!-- 允许使用外连接抓取.取值. true | false -->  
                <!-- <prop key="hibernate.use_outer_join">true</prop>   -->
                <!-- 外连接抓取树的最大深度,建议在0到3之间 -->  
                <!-- <prop key="hibernate.max_fetch_depth">1</prop>   -->
                <!-- 强制Hibernate按照被更新数据的主键，为SQL更新排序。这么做将减少在高并发系统中事务的死锁。 取值 true | false  -->  
                <!-- <prop key="hibernate.order_updates">true</prop>   -->
                <!-- 如果开启, Hibernate将收集有助于性能调节的统计数据.取值true|false -->  
                <!-- <prop key="hibernate.generate_statistics">true</prop>   -->
                <!-- create-drop|create|update|validate -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>  
        </property>
    </bean>  
    <!-- Hibernate自动建表字段命名策略 -->
    <bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy"/>
    
    <!-- 事务管理器定义 -->
    <!-- 
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    -->
    
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 配置事务异常封装 -->
    <bean id="persistenceExceptionTranslationPostProcessor" 
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <!-- 数据库创建脚本执行器 -->
    <!-- 
    <bean id="executor" class="cn.superfw.framework.config.ScriptsExecutor">
        <property name="dataSource" ref="dataSource"/>
        <property name="dropAndCreate" value="true"/>
    </bean>
    -->
    
    <!-- 注解式事务管理定义-->
    <!-- 基于注释的事务，当注释中发现@Transactional时，使用id为“transactionManager”的事务管理器  -->
    <!-- 如果没有设置transaction-manager的值，则spring以缺省默认的事务管理器来处理事务，默认事务管理器为第一个加载的事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>